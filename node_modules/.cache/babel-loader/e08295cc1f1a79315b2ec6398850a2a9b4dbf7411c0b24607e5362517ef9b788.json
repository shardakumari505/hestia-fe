{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './fleet-screen.scss';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FleetScreen = props => {\n  _s();\n  const [images, setImages] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.map((file, index) => {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        setImages(prevState => [...prevState, {\n          id: index,\n          src: e.target.result\n        }]);\n      };\n      reader.readAsDataURL(file);\n      return file;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps({\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        style: thumbsContainer,\n        children: thumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(FleetScreen, \"MTl4uD2K091fznYmhmrQ8fTJJg8=\");\n_c = FleetScreen;\nexport default FleetScreen;\nvar _c;\n$RefreshReg$(_c, \"FleetScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDropzone","jsxDEV","_jsxDEV","FleetScreen","props","_s","images","setImages","onDrop","useCallback","acceptedFiles","map","file","index","reader","FileReader","onload","e","prevState","id","src","target","result","readAsDataURL","className","children","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","style","thumbsContainer","thumbs","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["import React,{useEffect,useState} from \"react\";\r\nimport './fleet-screen.scss';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nconst FleetScreen = (props) =>{\r\n\r\n    const [images, setImages] = useState([]);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.map((file, index) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setImages((prevState) => [\r\n          ...prevState,\r\n          { id: index, src: e.target.result },\r\n        ]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      return file;\r\n    });\r\n  }, []);\r\n    return(\r\n        <div className=\"\">\r\n            <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FleetScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAO,qBAAqB;AAC5B,SAAQC,WAAW,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAE1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,MAAM,GAAGC,WAAW,CAAEC,aAAa,IAAK;IAC5CA,aAAa,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,CAAC,EAAE;QAC3BV,SAAS,CAAEW,SAAS,IAAK,CACvB,GAAGA,SAAS,EACZ;UAAEC,EAAE,EAAEN,KAAK;UAAEO,GAAG,EAAEH,CAAC,CAACI,MAAM,CAACC;QAAO,CAAC,CACpC,CAAC;MACJ,CAAC;MACDR,MAAM,CAACS,aAAa,CAACX,IAAI,CAAC;MAC1B,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACJ,oBACIV,OAAA;IAAKsB,SAAS,EAAC,EAAE;IAAAC,QAAA,eACbvB,OAAA;MAASsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACpCvB,OAAA;QAAA,GAASwB,YAAY,CAAC;UAACF,SAAS,EAAE;QAAU,CAAC,CAAC;QAAAC,QAAA,gBAC5CvB,OAAA;UAAA,GAAWyB,aAAa,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9B7B,OAAA;UAAAuB,QAAA,EAAG;QAAuD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACN7B,OAAA;QAAO8B,KAAK,EAAEC,eAAgB;QAAAR,QAAA,EAC3BS;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAA1B,EAAA,CA7BKF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}