{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\components\\\\drag-n-drop\\\\dropzone.jsx\",\n  _s = $RefreshSig$();\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport './dropzone.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColor = props => {\n  if (props.isDragAccept) {\n    return '#00e676';\n  }\n  if (props.isDragReject) {\n    return '#ff1744';\n  }\n  if (props.isFocused) {\n    return '#2196f3';\n  }\n  return '#eeeeee';\n};\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px;\n  border-width: 2px;\n  border-radius: 10px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: black;\n  font-weight: bold;\n  font-size: 1.4rem;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n_c = Container;\nfunction DropBox(_ref) {\n  _s();\n  let {\n    onDrop\n  } = _ref;\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles,\n    open,\n    isDragAccept,\n    isFocused,\n    isDragReject\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop,\n    noClick: true,\n    noKeyboard: true\n  });\n  const lists = acceptedFiles.map(list => /*#__PURE__*/_jsxDEV(\"span\", {}, list.path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropzone-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dropbox\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"dropbox\",\n        ...getRootProps({\n          isDragAccept,\n          isFocused,\n          isDragReject\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: open,\n          children: \"Click to select file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(DropBox, \"v2xYIXKPX7+khZ48PFnWXhbKcSI=\", false, function () {\n  return [useDropzone];\n});\n_c2 = DropBox;\nexport default DropBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"DropBox\");","map":{"version":3,"names":["useDropzone","styled","jsxDEV","_jsxDEV","getColor","props","isDragAccept","isDragReject","isFocused","Container","div","_c","DropBox","_ref","_s","onDrop","getRootProps","getInputProps","acceptedFiles","open","accept","noClick","noKeyboard","lists","map","list","path","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/components/drag-n-drop/dropzone.jsx"],"sourcesContent":["import { useDropzone } from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport './dropzone.scss'\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n    return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n    return '#ff1744';\r\n  }\r\n  if (props.isFocused) {\r\n    return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n};\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n  border-width: 2px;\r\n  border-radius: 10px;\r\n  border-color: ${(props) => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: black;\r\n  font-weight: bold;\r\n  font-size: 1.4rem;\r\n  outline: none;\r\n  transition: border 0.24s ease-in-out;\r\n`;\r\nfunction DropBox({ onDrop }) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    acceptedFiles,\r\n    open,\r\n    isDragAccept,\r\n    isFocused,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop,\r\n    noClick: true,\r\n    noKeyboard: true,\r\n  });\r\n  const lists = acceptedFiles.map((list) => (\r\n    <span key={list.path}>\r\n    </span>\r\n  ));\r\n  return (\r\n    <div className='dropzone-container'>\r\n      <section className=\"dropbox\">\r\n        <Container\r\n          className=\"dropbox\"\r\n          {...getRootProps({ isDragAccept, isFocused, isDragReject })}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <p>Drag 'n' drop some files here</p>\r\n          <button type=\"button\" className=\"btn\" onClick={open}>\r\n            Click to select file\r\n          </button>\r\n        </Container>\r\n      </section>\r\n      <aside>\r\n        <p>{lists}</p>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\nexport default DropBox;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,IAAIA,KAAK,CAACC,YAAY,EAAE;IACtB,OAAO,SAAS;EAClB;EACA,IAAID,KAAK,CAACE,YAAY,EAAE;IACtB,OAAO,SAAS;EAClB;EACA,IAAIF,KAAK,CAACG,SAAS,EAAE;IACnB,OAAO,SAAS;EAClB;EACA,OAAO,SAAS;AAClB,CAAC;AACD,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAmBL,KAAK,IAAKD,QAAQ,CAACC,KAAK,CAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,EAAA,GAhBIF,SAAS;AAiBf,SAASG,OAAOA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAM;IACJG,YAAY;IACZC,aAAa;IACbC,aAAa;IACbC,IAAI;IACJb,YAAY;IACZE,SAAS;IACTD;EACF,CAAC,GAAGP,WAAW,CAAC;IACdoB,MAAM,EAAE,SAAS;IACjBL,MAAM;IACNM,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAMC,KAAK,GAAGL,aAAa,CAACM,GAAG,CAAEC,IAAI,iBACnCtB,OAAA,aAAWsB,IAAI,CAACC,IAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CACP,CAAC;EACF,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC7B,OAAA;MAAS4B,SAAS,EAAC,SAAS;MAAAC,QAAA,eAC1B7B,OAAA,CAACM,SAAS;QACRsB,SAAS,EAAC,SAAS;QAAA,GACff,YAAY,CAAC;UAAEV,YAAY;UAAEE,SAAS;UAAED;QAAa,CAAC,CAAC;QAAAyB,QAAA,gBAE3D7B,OAAA;UAAA,GAAWc,aAAa,CAAC;QAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9B3B,OAAA;UAAA6B,QAAA,EAAG;QAA6B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpC3B,OAAA;UAAQ8B,IAAI,EAAC,QAAQ;UAACF,SAAS,EAAC,KAAK;UAACG,OAAO,EAAEf,IAAK;UAAAa,QAAA,EAAC;QAErD;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACV3B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAA6B,QAAA,EAAIT;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAChB,EAAA,CAtCQF,OAAO;EAAA,QASVZ,WAAW;AAAA;AAAAmC,GAAA,GATRvB,OAAO;AAuChB,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}