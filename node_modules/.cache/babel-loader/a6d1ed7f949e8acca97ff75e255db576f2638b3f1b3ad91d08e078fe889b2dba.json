{"ast":null,"code":"/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\nvar getRandomValue = require('./lib/getRandomValue.js');\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\nfunction randomBlock() {\n  return pad((getRandomValue() * discreteValues << 0).toString(base), blockSize);\n}\nfunction safeCounter() {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\nfunction cuid() {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c',\n    // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = new Date().getTime().toString(base),\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n  return letter + timestamp + counter + print + random;\n}\ncuid.slug = function slug() {\n  var date = new Date().getTime().toString(36),\n    counter = safeCounter().toString(36).slice(-4),\n    print = fingerprint().slice(0, 1) + fingerprint().slice(-1),\n    random = randomBlock().slice(-2);\n  return date.slice(-2) + counter + print + random;\n};\ncuid.isCuid = function isCuid(stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  if (stringToCheck.startsWith('c')) return true;\n  return false;\n};\ncuid.isSlug = function isSlug(stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  var stringLength = stringToCheck.length;\n  if (stringLength >= 7 && stringLength <= 10) return true;\n  return false;\n};\ncuid.fingerprint = fingerprint;\nmodule.exports = cuid;","map":{"version":3,"names":["fingerprint","require","pad","getRandomValue","c","blockSize","base","discreteValues","Math","pow","randomBlock","toString","safeCounter","cuid","letter","timestamp","Date","getTime","counter","print","random","slug","date","slice","isCuid","stringToCheck","startsWith","isSlug","stringLength","length","module","exports"],"sources":["C:/Users/t-shakumari/hestia/node_modules/cuid/index.js"],"sourcesContent":["/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\nvar getRandomValue = require('./lib/getRandomValue.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((getRandomValue() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.slug = function slug () {\n  var date = new Date().getTime().toString(36),\n    counter = safeCounter().toString(36).slice(-4),\n    print = fingerprint().slice(0, 1) +\n      fingerprint().slice(-1),\n    random = randomBlock().slice(-2);\n\n  return date.slice(-2) +\n    counter + print + random;\n};\n\ncuid.isCuid = function isCuid (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  if (stringToCheck.startsWith('c')) return true;\n  return false;\n};\n\ncuid.isSlug = function isSlug (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  var stringLength = stringToCheck.length;\n  if (stringLength >= 7 && stringLength <= 10) return true;\n  return false;\n};\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACjD,IAAIC,GAAG,GAAGD,OAAO,CAAC,cAAc,CAAC;AACjC,IAAIE,cAAc,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAEvD,IAAIG,CAAC,GAAG,CAAC;EACPC,SAAS,GAAG,CAAC;EACbC,IAAI,GAAG,EAAE;EACTC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAACH,IAAI,EAAED,SAAS,CAAC;AAE5C,SAASK,WAAWA,CAAA,EAAI;EACtB,OAAOR,GAAG,CAAC,CAACC,cAAc,CAAC,CAAC,GAC1BI,cAAc,IAAI,CAAC,EAClBI,QAAQ,CAACL,IAAI,CAAC,EAAED,SAAS,CAAC;AAC/B;AAEA,SAASO,WAAWA,CAAA,EAAI;EACtBR,CAAC,GAAGA,CAAC,GAAGG,cAAc,GAAGH,CAAC,GAAG,CAAC;EAC9BA,CAAC,EAAE,CAAC,CAAC;EACL,OAAOA,CAAC,GAAG,CAAC;AACd;AAEA,SAASS,IAAIA,CAAA,EAAI;EACf;EACA;EACA,IAAIC,MAAM,GAAG,GAAG;IAAE;;IAEhB;IACA;IACA;IACAC,SAAS,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAEN,QAAQ,CAACL,IAAI,CAAC;IAEjD;IACAY,OAAO,GAAGhB,GAAG,CAACU,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACL,IAAI,CAAC,EAAED,SAAS,CAAC;IAEtD;IACA;IACA;IACAc,KAAK,GAAGnB,WAAW,CAAC,CAAC;IAErB;IACAoB,MAAM,GAAGV,WAAW,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC;EAExC,OAAOI,MAAM,GAAGC,SAAS,GAAGG,OAAO,GAAGC,KAAK,GAAGC,MAAM;AACtD;AAEAP,IAAI,CAACQ,IAAI,GAAG,SAASA,IAAIA,CAAA,EAAI;EAC3B,IAAIC,IAAI,GAAG,IAAIN,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAACN,QAAQ,CAAC,EAAE,CAAC;IAC1CO,OAAO,GAAGN,WAAW,CAAC,CAAC,CAACD,QAAQ,CAAC,EAAE,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9CJ,KAAK,GAAGnB,WAAW,CAAC,CAAC,CAACuB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAC/BvB,WAAW,CAAC,CAAC,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAC;IACzBH,MAAM,GAAGV,WAAW,CAAC,CAAC,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC;EAElC,OAAOD,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,GACnBL,OAAO,GAAGC,KAAK,GAAGC,MAAM;AAC5B,CAAC;AAEDP,IAAI,CAACW,MAAM,GAAG,SAASA,MAAMA,CAAEC,aAAa,EAAE;EAC5C,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE,OAAO,KAAK;EACnD,IAAIA,aAAa,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;EAC9C,OAAO,KAAK;AACd,CAAC;AAEDb,IAAI,CAACc,MAAM,GAAG,SAASA,MAAMA,CAAEF,aAAa,EAAE;EAC5C,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE,OAAO,KAAK;EACnD,IAAIG,YAAY,GAAGH,aAAa,CAACI,MAAM;EACvC,IAAID,YAAY,IAAI,CAAC,IAAIA,YAAY,IAAI,EAAE,EAAE,OAAO,IAAI;EACxD,OAAO,KAAK;AACd,CAAC;AAEDf,IAAI,CAACb,WAAW,GAAGA,WAAW;AAE9B8B,MAAM,CAACC,OAAO,GAAGlB,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}