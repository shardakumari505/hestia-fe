{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport './fleet-screen.scss';\nimport { useDropzone } from 'react-dropzone';\nimport FileDropzone from \"../components/drag-n-drop/dropzone\";\nimport ShowImage from \"./showImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FleetScreen = props => {\n  _s();\n  const [images, setImages] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.map((file, index) => {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        setImages(prevState => [...prevState, {\n          id: index,\n          src: e.target.result\n        }]);\n      };\n      reader.readAsDataURL(file);\n      return file;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fleet-screen-container\",\n    children: /*#__PURE__*/_jsxDEV(FileDropzone, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(FleetScreen, \"MTl4uD2K091fznYmhmrQ8fTJJg8=\");\n_c = FleetScreen;\nexport default FleetScreen;\nvar _c;\n$RefreshReg$(_c, \"FleetScreen\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","FileDropzone","ShowImage","jsxDEV","_jsxDEV","FleetScreen","props","_s","images","setImages","onDrop","acceptedFiles","map","file","index","reader","FileReader","onload","e","prevState","id","src","target","result","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport './fleet-screen.scss';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport FileDropzone from \"../components/drag-n-drop/dropzone\";\r\nimport ShowImage from \"./showImage\";\r\n\r\nconst FleetScreen = (props) => {\r\n\r\n    const [images, setImages] = useState([]);\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.map((file, index) => {\r\n            const reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                setImages((prevState) => [\r\n                    ...prevState,\r\n                    { id: index, src: e.target.result },\r\n                ]);\r\n            };\r\n            reader.readAsDataURL(file);\r\n            return file;\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"fleet-screen-container\">\r\n            <FileDropzone />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FleetScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,MAAM,GAAGZ,WAAW,CAAEa,aAAa,IAAK;IAC1CA,aAAa,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC/B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,CAAC,EAAE;QACzBT,SAAS,CAAEU,SAAS,IAAK,CACrB,GAAGA,SAAS,EACZ;UAAEC,EAAE,EAAEN,KAAK;UAAEO,GAAG,EAAEH,CAAC,CAACI,MAAM,CAACC;QAAO,CAAC,CACtC,CAAC;MACN,CAAC;MACDR,MAAM,CAACS,aAAa,CAACX,IAAI,CAAC;MAC1B,OAAOA,IAAI;IACf,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACIT,OAAA;IAAKqB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCtB,OAAA,CAACH,YAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAAAvB,EAAA,CArBKF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAuBjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}