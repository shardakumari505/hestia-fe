{"ast":null,"code":"var getRandomValue;\nvar crypto = typeof window !== 'undefined' && (window.crypto || window.msCrypto) || typeof self !== 'undefined' && self.crypto;\nif (crypto) {\n  var lim = Math.pow(2, 32) - 1;\n  getRandomValue = function () {\n    return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n  };\n} else {\n  getRandomValue = Math.random;\n}\nmodule.exports = getRandomValue;","map":{"version":3,"names":["getRandomValue","crypto","window","msCrypto","self","lim","Math","pow","abs","getRandomValues","Uint32Array","random","module","exports"],"sources":["C:/Users/t-shakumari/hestia/node_modules/cuid/lib/getRandomValue.browser.js"],"sourcesContent":["\nvar getRandomValue;\n\nvar crypto = typeof window !== 'undefined' &&\n  (window.crypto || window.msCrypto) ||\n  typeof self !== 'undefined' &&\n  self.crypto;\n\nif (crypto) {\n    var lim = Math.pow(2, 32) - 1;\n    getRandomValue = function () {\n        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n    };\n} else {\n    getRandomValue = Math.random;\n}\n\nmodule.exports = getRandomValue;\n"],"mappings":"AACA,IAAIA,cAAc;AAElB,IAAIC,MAAM,GAAG,OAAOC,MAAM,KAAK,WAAW,KACvCA,MAAM,CAACD,MAAM,IAAIC,MAAM,CAACC,QAAQ,CAAC,IAClC,OAAOC,IAAI,KAAK,WAAW,IAC3BA,IAAI,CAACH,MAAM;AAEb,IAAIA,MAAM,EAAE;EACR,IAAII,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EAC7BP,cAAc,GAAG,SAAAA,CAAA,EAAY;IACzB,OAAOM,IAAI,CAACE,GAAG,CAACP,MAAM,CAACQ,eAAe,CAAC,IAAIC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGL,GAAG,CAAC;EACxE,CAAC;AACL,CAAC,MAAM;EACHL,cAAc,GAAGM,IAAI,CAACK,MAAM;AAChC;AAEAC,MAAM,CAACC,OAAO,GAAGb,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}