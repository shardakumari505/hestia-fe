{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\components\\\\signin\\\\signin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './signin.scss';\nimport Box from '@mui/material/Box';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport KeyIcon from '@mui/icons-material/Key';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { checkCredentials } from '../../Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn(_ref) {\n  _s();\n  let {\n    setLoggedIn\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState('paper');\n  const [username, setUsername] = useState('');\n  const [repoPATToken, setRepoPATToken] = useState('');\n  const [loggedIn, setLoggedInState] = useState(localStorage.getItem('loggedIn') === 'true');\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n    if (user) {\n      // Sign-in successful\n      console.log('User signed in:', user);\n      // Perform any additional actions after successful sign-in\n\n      // Set the logged-in state\n      setLoggedInState(true);\n      localStorage.setItem('loggedIn', 'true');\n    } else {\n      // Invalid credentials\n      console.error('Username or token does not match');\n      // Show an error message to the user (you can use a toast or a Snackbar component)\n    }\n\n    // Close the dialog\n    setOpen(false);\n    setUsername('');\n    setRepoPATToken('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"input-with-icon-textfield\",\n      label: \"Username\",\n      sx: {\n        width: \"20vw\"\n      },\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      },\n      variant: \"standard\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"input-with-icon-textfield\",\n      label: \"PAT Token\",\n      sx: {\n        width: \"20vw\"\n      },\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(KeyIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      },\n      variant: \"standard\",\n      value: repoPATToken,\n      onChange: e => setRepoPATToken(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"KnFCfZ23TJE65amm49vS+DMtUr0=\");\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useEffect","Box","InputAdornment","TextField","AccountCircle","KeyIcon","Button","Dialog","DialogActions","DialogContent","DialogContentText","AccountCircleIcon","checkCredentials","jsxDEV","_jsxDEV","SignIn","_ref","_s","setLoggedIn","open","setOpen","scroll","setScroll","username","setUsername","repoPATToken","setRepoPATToken","loggedIn","setLoggedInState","localStorage","getItem","handleClickOpen","scrollType","user","console","log","setItem","error","className","children","id","label","sx","width","InputProps","startAdornment","position","fileName","_jsxFileName","lineNumber","columnNumber","variant","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/components/signin/signin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './signin.scss'\r\nimport Box from '@mui/material/Box';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { checkCredentials } from '../../Auth';\r\n\r\nexport default function SignIn({ setLoggedIn }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [scroll, setScroll] = useState('paper');\r\n  const [username, setUsername] = useState('');\r\n  const [repoPATToken, setRepoPATToken] = useState('');\r\n  const [loggedIn, setLoggedInState] = useState(localStorage.getItem('loggedIn') === 'true');\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n\r\n    if (user) {\r\n      // Sign-in successful\r\n      console.log('User signed in:', user);\r\n      // Perform any additional actions after successful sign-in\r\n\r\n      // Set the logged-in state\r\n      setLoggedInState(true);\r\n      localStorage.setItem('loggedIn', 'true');\r\n    } else {\r\n      // Invalid credentials\r\n      console.error('Username or token does not match');\r\n      // Show an error message to the user (you can use a toast or a Snackbar component)\r\n    }\r\n\r\n    // Close the dialog\r\n    setOpen(false);\r\n    setUsername('');\r\n    setRepoPATToken('');\r\n  };\r\n\r\n  return (\r\n    <div className='signin-container'>\r\n      <TextField\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Username\"\r\n        sx={{width:\"20vw\"}}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant=\"standard\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <TextField\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"PAT Token\"\r\n        sx={{width:\"20vw\"}}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <KeyIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant=\"standard\"\r\n        value={repoPATToken}\r\n        onChange={(e) => setRepoPATToken(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}