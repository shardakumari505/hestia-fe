{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\n//import Button from '@mui/material/Button';\n//import TextField from '@mui/material/TextField';\n//import FormControl from '@mui/material/FormControl';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\n//import { Link } from \"react-router-dom\";\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport React, { useState, setState } from \"react\";\nimport { TextField, Button, Box, Paper } from \"@mui/material\";\n\n// import NavMenu from '../common/NavMenu';\n// import DrawerHeader from '../common/DrawerHeader';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DraggableCard = _ref => {\n  let {\n    text,\n    bgColor,\n    index\n  } = _ref;\n  const onDragStart = evt => {\n    // ...\n    evt.dataTransfer.setData(\"text/html\", `index-${index}`);\n    // ...\n  };\n\n  const onDrop = evt => {\n    // ...\n    onDrop(evt, index); // Pass the index to onDrop function\n  };\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    children: /*#__PURE__*/_jsxDEV(Card\n    // ...\n    , {\n      onDragStart: onDragStart,\n      onDrop: onDrop // Use the updated onDrop function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_c = DraggableCard;\nconst DraggableCardList = () => {\n  const cards = [{\n    text: \"Card 1\",\n    bgColor: \"#f44336\"\n  }, {\n    text: \"Card 2\",\n    bgColor: \"#2196f3\"\n  }, {\n    text: \"Card 3\",\n    bgColor: \"#4caf50\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(DraggableCard, {\n      text: card.text,\n      bgColor: card.bgColor,\n      index: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c2 = DraggableCardList;\nconst Cluster = styled(Paper)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    Draggable: true\n  };\n});\n_c3 = Cluster;\nexport default function FleetScreen(props) {\n  _s();\n  const [fleetName, setFleetName] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [fleetClusters, setFleetClusters] = useState([]);\n  const [fleetNameError, setFleetNameError] = useState(false);\n  const [departmentError, setDepartmentError] = useState(false);\n\n  // const clusters=[]\n  // setFleetClusters(clusters)\n\n  const onDragOver = evt => {\n    evt.preventDefault();\n    evt.dataTransfer.dropEffect = \"move\";\n    console.log(\"drag over\");\n  };\n  const onDragStart = evt => {\n    console.log(\"drag start\");\n    let element = evt.currentTarget;\n    //console.log(\"element\", element.id);\n    evt.target.id = element.id;\n    element.classList.add(\"dragged\");\n    evt.dataTransfer.setData(\"text/html\", evt.target.id);\n    evt.dataTransfer.effectAllowed = \"move\";\n  };\n  const onDragEnter = evt => {\n    console.log(\"drag enter\");\n    evt.preventDefault();\n    let element = evt.currentTarget;\n    element.classList.add(\"dragged-over\");\n    evt.dataTransfer.dropEffect = \"move\";\n  };\n  const onDrop = (evt, cardIndex) => {\n    evt.preventDefault();\n    evt.currentTarget.classList.remove(\"dragged-over\");\n    let data = evt.dataTransfer.getData(\"text/html\");\n    let sourceIndex = parseInt(data.slice(-1)); // Extract the source index from the card data\n\n    setFleetClusters(prevClusters => {\n      const updatedClusters = [...prevClusters];\n      const [removedCluster] = updatedClusters.splice(sourceIndex, 1); // Remove the cluster from the original source index\n      updatedClusters.splice(cardIndex, 0, removedCluster); // Insert the removed cluster at the dropped index\n      return updatedClusters;\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setFleetNameError(false);\n    setDepartmentError(false);\n    if (fleetName === '') {\n      setFleetNameError(true);\n    }\n    if (department === '') {\n      setDepartmentError(true);\n    }\n    if (fleetNameError && departmentError) {\n      console.log(fleetName, department);\n    }\n    console.log(fleetName, department);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"main\",\n          sx: {\n            flexGrow: 1,\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              noWrap: true,\n              component: \"div\",\n              children: \"Fleet Details - props.fleetName-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              type: \"submit\",\n              align: \"center\",\n              startIcon: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 112\n              }, this),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              align: \"center\",\n              startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 113\n              }, this),\n              children: \" Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), \" \\xA0\\xA0\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                width: '70%',\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                component: \"form\",\n                sx: {\n                  '& .MuiTextField-root': {\n                    m: 2,\n                    width: '45ch'\n                  },\n                  width: '100%',\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"flex-start\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\"\n                  },\n                  className: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Fleet Name\",\n                    onChange: e => setFleetName(e.target.value),\n                    required: true,\n                    variant: \"outlined\",\n                    color: \"secondary\",\n                    type: \"fleetName\",\n                    sx: {\n                      mb: 3\n                    }\n                    //fullWidth\n                    ,\n                    value: fleetName,\n                    error: fleetNameError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Department \",\n                    onChange: e => setDepartment(e.target.value),\n                    required: true,\n                    variant: \"outlined\",\n                    color: \"secondary\",\n                    type: \"department\",\n                    value: department,\n                    error: departmentError,\n                    sx: {\n                      mb: 3\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"flex-start\"\n                  },\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"outlined-multiline-static\",\n                    onChange: e => setDepartment(e.target.value),\n                    label: \"Notes\",\n                    multiline: true,\n                    rows: 5\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\"\n                  },\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    elevation: 2,\n                    sx: {\n                      width: '95%',\n                      mb: 3\n                    }\n                    //{ height: '50vh', mb: 2}\n                    ,\n                    children: [\"Clusters...\", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"drop-container\",\n                      onDragOver: onDragOver,\n                      onDragEnter: onDragEnter,\n                      onDrop: onDrop,\n                      style: {\n                        height: \"40vh\"\n                      },\n                      children: Array.from(fleetClusters).map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        ml: 3,\n                        mb: 1,\n                        xs: 2,\n                        sm: 4,\n                        md: 4,\n                        children: /*#__PURE__*/_jsxDEV(Cluster, {\n                          draggable: \"true\",\n                          name: \"cluster-{index}\",\n                          id: index,\n                          children: [\"Cluster Name-03\", index]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 57\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                width: '30%',\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flexGrow: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: {\n                    xs: 2,\n                    md: 3\n                  },\n                  columns: {\n                    xs: 4,\n                    sm: 8,\n                    md: 12\n                  },\n                  children: Array.from(Array(5)).map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 2,\n                    sm: 4,\n                    md: 4,\n                    children: /*#__PURE__*/_jsxDEV(Cluster, {\n                      draggable: \"true\",\n                      name: \"cluster-{index}\",\n                      onDragStart: onDragStart,\n                      id: index,\n                      children: [\"Cluster Name-03\", index]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 49\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(FleetScreen, \"4EAKczPyUCEZnFukCD2Xl5yks2I=\");\n_c4 = FleetScreen;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DraggableCard\");\n$RefreshReg$(_c2, \"DraggableCardList\");\n$RefreshReg$(_c3, \"Cluster\");\n$RefreshReg$(_c4, \"FleetScreen\");","map":{"version":3,"names":["experimentalStyled","styled","Typography","Grid","Card","Stack","React","useState","setState","TextField","Button","Box","Paper","SaveIcon","CancelIcon","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","DraggableCard","_ref","text","bgColor","index","onDragStart","evt","dataTransfer","setData","onDrop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DraggableCardList","cards","sx","display","justifyContent","alignItems","height","map","card","_c2","Cluster","_ref2","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","secondary","_c3","FleetScreen","props","_s","fleetName","setFleetName","department","setDepartment","fleetClusters","setFleetClusters","fleetNameError","setFleetNameError","departmentError","setDepartmentError","onDragOver","preventDefault","dropEffect","console","log","element","currentTarget","target","id","classList","add","effectAllowed","onDragEnter","cardIndex","remove","data","getData","sourceIndex","parseInt","slice","prevClusters","updatedClusters","removedCluster","splice","handleSubmit","event","component","flexGrow","p","direction","variant","noWrap","type","align","startIcon","container","elevation","width","mb","m","flexDirection","style","className","label","onChange","e","value","required","error","multiline","rows","Array","from","_","item","ml","xs","sm","md","draggable","name","columns","_c4","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["//import Button from '@mui/material/Button';\r\n//import TextField from '@mui/material/TextField';\r\n//import FormControl from '@mui/material/FormControl';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\n//import { Link } from \"react-router-dom\";\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport React, { useState, setState } from \"react\";\r\nimport { TextField, Button, Box, Paper } from \"@mui/material\";\r\n\r\n// import NavMenu from '../common/NavMenu';\r\n// import DrawerHeader from '../common/DrawerHeader';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport Draggable from \"react-draggable\";\r\n\r\n\r\nconst DraggableCard = ({ text, bgColor, index }) => {\r\n    const onDragStart = (evt) => {\r\n      // ...\r\n      evt.dataTransfer.setData(\"text/html\", `index-${index}`);\r\n      // ...\r\n    };\r\n  \r\n    const onDrop = (evt) => {\r\n      // ...\r\n      onDrop(evt, index); // Pass the index to onDrop function\r\n    };\r\n  \r\n    return (\r\n      <Draggable>\r\n        <Card\r\n          // ...\r\n          onDragStart={onDragStart}\r\n          onDrop={onDrop} // Use the updated onDrop function\r\n        >\r\n          {/* ... */}\r\n        </Card>\r\n      </Draggable>\r\n    );\r\n  };\r\n  \r\n\r\nconst DraggableCardList = () => {\r\n    const cards = [\r\n        { text: \"Card 1\", bgColor: \"#f44336\" },\r\n        { text: \"Card 2\", bgColor: \"#2196f3\" },\r\n        { text: \"Card 3\", bgColor: \"#4caf50\" },\r\n    ];\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n            }}\r\n        >\r\n            {cards.map((card, index) => (\r\n                <DraggableCard\r\n                    key={index}\r\n                    text={card.text}\r\n                    bgColor={card.bgColor}\r\n                    index={index}\r\n                />\r\n            ))}\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst Cluster = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    Draggable: true,\r\n}));\r\n\r\nexport default function FleetScreen(props) {\r\n    const [fleetName, setFleetName] = useState(\"\")\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [fleetClusters, setFleetClusters] = useState([])\r\n    const [fleetNameError, setFleetNameError] = useState(false)\r\n    const [departmentError, setDepartmentError] = useState(false)\r\n\r\n    // const clusters=[]\r\n    // setFleetClusters(clusters)\r\n\r\n    const onDragOver = (evt) => {\r\n        evt.preventDefault();\r\n        evt.dataTransfer.dropEffect = \"move\";\r\n        console.log(\"drag over\");\r\n    };\r\n\r\n    const onDragStart = (evt) => {\r\n        console.log(\"drag start\");\r\n        let element = evt.currentTarget;\r\n        //console.log(\"element\", element.id);\r\n        evt.target.id = element.id;\r\n        element.classList.add(\"dragged\");\r\n        evt.dataTransfer.setData(\"text/html\", evt.target.id);\r\n        evt.dataTransfer.effectAllowed = \"move\";\r\n\r\n    };\r\n\r\n    const onDragEnter = (evt) => {\r\n        console.log(\"drag enter\");\r\n        evt.preventDefault();\r\n        let element = evt.currentTarget;\r\n        element.classList.add(\"dragged-over\");\r\n        evt.dataTransfer.dropEffect = \"move\";\r\n\r\n    };\r\n\r\n    const onDrop = (evt, cardIndex) => {\r\n        evt.preventDefault();\r\n        evt.currentTarget.classList.remove(\"dragged-over\");\r\n        let data = evt.dataTransfer.getData(\"text/html\");\r\n        let sourceIndex = parseInt(data.slice(-1)); // Extract the source index from the card data\r\n      \r\n        setFleetClusters((prevClusters) => {\r\n          const updatedClusters = [...prevClusters];\r\n          const [removedCluster] = updatedClusters.splice(sourceIndex, 1); // Remove the cluster from the original source index\r\n          updatedClusters.splice(cardIndex, 0, removedCluster); // Insert the removed cluster at the dropped index\r\n          return updatedClusters;\r\n        });\r\n      };\r\n      \r\n      \r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        setFleetNameError(false)\r\n        setDepartmentError(false)\r\n\r\n        if (fleetName === '') {\r\n            setFleetNameError(true)\r\n        }\r\n        if (department === '') {\r\n            setDepartmentError(true)\r\n        }\r\n\r\n        if (fleetNameError && departmentError) {\r\n            console.log(fleetName, department)\r\n        }\r\n        console.log(fleetName, department)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <React.Fragment>\r\n\r\n                {/* <DrawerHeader /> */}\r\n\r\n\r\n                <Box sx={{ display: 'flex' }}>\r\n                    {/* <NavMenu /> */}\r\n                    <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n\r\n                        <Stack direction=\"row\" spacing={3}>\r\n                            <Typography variant=\"h6\" noWrap component=\"div\">\r\n                                Fleet Details - props.fleetName-0\r\n                            </Typography>\r\n                            <Button variant=\"outlined\" color=\"primary\" type=\"submit\" align=\"center\" startIcon={<CancelIcon />}>Cancel</Button>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" align=\"center\" startIcon={<SaveIcon />} > Save</Button> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Stack>\r\n                        <br />\r\n                        <Grid container spacing={2}>\r\n                            <Paper elevation={2} sx={{ width: '70%', mb: 2 }}>\r\n                                <Box component=\"form\"\r\n                                    sx={{\r\n                                        '& .MuiTextField-root': { m: 2, width: '45ch' },\r\n                                        width: '100%',\r\n                                        display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"\r\n                                    }}\r\n\r\n                                >\r\n                                    <div style={{ display: \"flex\" }} className=''>\r\n                                        <TextField\r\n                                            label=\"Fleet Name\"\r\n                                            onChange={e => setFleetName(e.target.value)}\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            type=\"fleetName\"\r\n                                            sx={{ mb: 3 }}\r\n                                            //fullWidth\r\n                                            value={fleetName}\r\n                                            error={fleetNameError}\r\n                                        />\r\n                                        <TextField\r\n                                            label=\"Department \"\r\n                                            onChange={e => setDepartment(e.target.value)}\r\n                                            required\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            type=\"department\"\r\n                                            value={department}\r\n                                            error={departmentError}\r\n                                            sx={{ mb: 3 }}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ display: \"flex\", alignItems: \"flex-start\" }} className=''>\r\n                                        <TextField\r\n                                            id=\"outlined-multiline-static\"\r\n                                            onChange={e => setDepartment(e.target.value)}\r\n                                            label=\"Notes\"\r\n                                            multiline\r\n                                            rows={5}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <br />\r\n                                    <div style={{ display:\"flex\",alignItems:\"center\",justifyContent:\"center\" }} className=''>\r\n                                        <Paper\r\n                                            elevation={2}\r\n                                            sx={\r\n                                                { width: '95%', mb: 3 }\r\n                                                //{ height: '50vh', mb: 2}\r\n                                            }\r\n                                        >\r\n                                            Clusters...\r\n                                            <div className=\"drop-container\"\r\n                                                onDragOver={onDragOver}\r\n                                                onDragEnter={onDragEnter}\r\n                                                onDrop={onDrop}\r\n                                                style={{ height: \"40vh\" }}\r\n                                            >\r\n                                                {Array.from(fleetClusters).map((_, index) => (\r\n                                                    <Grid item ml={3} mb={1} xs={2} sm={4} md={4} key={index}>\r\n                                                        <Cluster\r\n                                                            draggable=\"true\"\r\n                                                            name=\"cluster-{index}\"\r\n                                                            id={index}\r\n                                                        >\r\n                                                            Cluster Name-03{index}\r\n                                                        </Cluster>\r\n\r\n                                                    </Grid>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Paper>\r\n                                    </div>\r\n                                </Box>\r\n                            </Paper>\r\n                            <Paper elevation={2} sx={{ width: '30%', mb: 2 }}>\r\n\r\n                                <Box sx={{ flexGrow: 1 }}>\r\n                                    <br />\r\n                                    <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                                        {Array.from(Array(5)).map((_, index) => (\r\n                                            <Grid item xs={2} sm={4} md={4} key={index}>\r\n                                                <Cluster\r\n                                                    draggable=\"true\"\r\n                                                    name=\"cluster-{index}\"\r\n                                                    onDragStart={onDragStart}\r\n                                                    id={index}\r\n                                                >\r\n                                                    Cluster Name-03{index}\r\n                                                </Cluster>\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Box>\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                    </Box >\r\n\r\n                </Box >\r\n            </React.Fragment >\r\n        </>\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}