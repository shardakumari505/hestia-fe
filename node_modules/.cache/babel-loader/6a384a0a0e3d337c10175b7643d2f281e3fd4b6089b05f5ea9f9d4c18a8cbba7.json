{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport './fleet-screen.scss';\nimport cuid from 'cuid';\nimport Dropzone from '../components/drag-n-drop/dropzone';\nimport ImageList from './images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FleetScreen = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.map(file => {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        setImages(prevState => [...prevState, {\n          id: cuid(),\n          src: e.target.result\n        }]);\n      };\n      reader.readAsDataURL(file);\n      return file;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: onDrop,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(FleetScreen, \"MTl4uD2K091fznYmhmrQ8fTJJg8=\");\n_c = FleetScreen;\nexport default FleetScreen;\nvar _c;\n$RefreshReg$(_c, \"FleetScreen\");","map":{"version":3,"names":["React","useCallback","useState","cuid","Dropzone","ImageList","jsxDEV","_jsxDEV","FleetScreen","_s","images","setImages","onDrop","acceptedFiles","map","file","reader","FileReader","onload","e","prevState","id","src","target","result","readAsDataURL","className","children","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport './fleet-screen.scss';\r\nimport cuid from 'cuid';\r\nimport Dropzone from '../components/drag-n-drop/dropzone';\r\nimport ImageList from './images';\r\n\r\n\r\nconst FleetScreen = () => {\r\n    const [images, setImages] = useState([]);\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        acceptedFiles.map(file => {\r\n          const reader = new FileReader();\r\n          reader.onload = function(e) { \r\n            setImages(prevState => [\r\n              ...prevState,\r\n              { id: cuid(), src: e.target.result }\r\n            ]);\r\n          };\r\n          reader.readAsDataURL(file);\r\n          return file;\r\n        });\r\n      }, []);\r\n\r\n    return (\r\n        <div className=''>\r\n            <Dropzone onDrop={onDrop} accept={\"image/*\"} />\r\n            <ImageList images={images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FleetScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,qBAAqB;AAC5B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,SAAS,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,MAAM,GAAGX,WAAW,CAACY,aAAa,IAAI;IACxCA,aAAa,CAACC,GAAG,CAACC,IAAI,IAAI;MACxB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAASC,CAAC,EAAE;QAC1BR,SAAS,CAACS,SAAS,IAAI,CACrB,GAAGA,SAAS,EACZ;UAAEC,EAAE,EAAElB,IAAI,CAAC,CAAC;UAAEmB,GAAG,EAAEH,CAAC,CAACI,MAAM,CAACC;QAAO,CAAC,CACrC,CAAC;MACJ,CAAC;MACDR,MAAM,CAACS,aAAa,CAACV,IAAI,CAAC;MAC1B,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,oBACIR,OAAA;IAAKmB,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACbpB,OAAA,CAACH,QAAQ;MAACQ,MAAM,EAAEA,MAAO;MAACgB,MAAM,EAAE;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CzB,OAAA,CAACF,SAAS;MAACK,MAAM,EAAEA;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAvBKD,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAyBjB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}