{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cluster = _ref => {\n  let {\n    name,\n    onDrop\n  } = _ref;\n  const handleDragStart = event => {\n    event.dataTransfer.setData(\"text/plain\", event.target.id);\n  };\n  const handleDragEnd = () => {\n    // Optional: Perform any cleanup or additional actions after the drag ends\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: name,\n      className: \"cluster\",\n      draggable: true,\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Cluster;\nconst FleetScreen = () => {\n  _s();\n  const [droppedItems, setDroppedItems] = useState([]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const itemId = event.dataTransfer.getData(\"text/plain\");\n    const itemName = event.target.innerText;\n    if (!droppedItems.some(item => item.id === itemId)) {\n      setDroppedItems(prevItems => [...prevItems, {\n        id: itemId,\n        name: itemName\n      }]);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drop-container\",\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Drag and Drop Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cluster-container\",\n      children: [1, 2, 3, 4, 5].map(item => /*#__PURE__*/_jsxDEV(Cluster, {\n        name: `Cluster Name ${item}`\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropped-items\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dropped Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: droppedItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FleetScreen, \"uevDkba0AATDmcDiQsCOl1bV6co=\");\n_c2 = FleetScreen;\nexport default FleetScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cluster\");\n$RefreshReg$(_c2, \"FleetScreen\");","map":{"version":3,"names":["React","useState","Draggable","jsxDEV","_jsxDEV","Cluster","_ref","name","onDrop","handleDragStart","event","dataTransfer","setData","target","id","handleDragEnd","children","className","draggable","onDragStart","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c","FleetScreen","_s","droppedItems","setDroppedItems","handleDrop","preventDefault","itemId","getData","itemName","innerText","some","item","prevItems","handleDragOver","onDragOver","map","_c2","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst Cluster = ({ name, onDrop }) => {\r\n  const handleDragStart = (event) => {\r\n    event.dataTransfer.setData(\"text/plain\", event.target.id);\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    // Optional: Perform any cleanup or additional actions after the drag ends\r\n  };\r\n\r\n  return (\r\n    <Draggable>\r\n      <div\r\n        id={name}\r\n        className=\"cluster\"\r\n        draggable\r\n        onDragStart={handleDragStart}\r\n        onDragEnd={handleDragEnd}\r\n      >\r\n        {name}\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst FleetScreen = () => {\r\n  const [droppedItems, setDroppedItems] = useState([]);\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const itemId = event.dataTransfer.getData(\"text/plain\");\r\n    const itemName = event.target.innerText;\r\n\r\n    if (!droppedItems.some((item) => item.id === itemId)) {\r\n      setDroppedItems((prevItems) => [\r\n        ...prevItems,\r\n        { id: itemId, name: itemName }\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"drop-container\" onDrop={handleDrop} onDragOver={handleDragOver}>\r\n      <h2>Drag and Drop Example</h2>\r\n      <div className=\"cluster-container\">\r\n        {[1, 2, 3, 4, 5].map((item) => (\r\n          <Cluster key={item} name={`Cluster Name ${item}`} />\r\n        ))}\r\n      </div>\r\n      <div className=\"dropped-items\">\r\n        <h3>Dropped Items</h3>\r\n        <ul>\r\n          {droppedItems.map((item) => (\r\n            <li key={item.id}>{item.name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FleetScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}