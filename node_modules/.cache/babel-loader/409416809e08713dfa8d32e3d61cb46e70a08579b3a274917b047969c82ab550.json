{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\components\\\\signin\\\\signin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './signin.scss';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport KeyIcon from '@mui/icons-material/Key';\nimport Button from '@mui/material/Button';\nimport { checkCredentials } from '../../Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [repoPATToken, setRepoPATToken] = useState('');\n  const [loggedIn, setLoggedInState] = useState(localStorage.getItem('loggedIn') === 'true');\n  const handleSubmit = () => {\n    const user = checkCredentials(username, repoPATToken);\n    if (user) {\n      console.log('User signed in:', user);\n      setLoggedInState(true);\n      localStorage.setItem('loggedIn', 'true');\n    } else {\n      console.error('Username or token does not match');\n    }\n    setUsername('');\n    setRepoPATToken('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input-with-icon-textfield\",\n        label: \"Username\",\n        sx: {\n          width: \"20vw\"\n        },\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        },\n        variant: \"standard\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input-with-icon-textfield\",\n        label: \"PAT Token\",\n        sx: {\n          width: \"20vw\"\n        },\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(KeyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        },\n        variant: \"standard\",\n        value: repoPATToken,\n        onChange: e => setRepoPATToken(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"0bHQ5G6JtI0zeJ1Z8xEGJun6wgc=\");\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","InputAdornment","TextField","AccountCircle","KeyIcon","Button","checkCredentials","jsxDEV","_jsxDEV","SignIn","_s","username","setUsername","repoPATToken","setRepoPATToken","loggedIn","setLoggedInState","localStorage","getItem","handleSubmit","user","console","log","setItem","error","className","children","id","label","sx","width","InputProps","startAdornment","position","fileName","_jsxFileName","lineNumber","columnNumber","variant","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/components/signin/signin.jsx"],"sourcesContent":["import React, { useState} from 'react';\r\nimport './signin.scss'\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport KeyIcon from '@mui/icons-material/Key';\r\nimport Button from '@mui/material/Button';\r\nimport { checkCredentials } from '../../Auth';\r\n\r\nexport default function SignIn() {\r\n  const [username, setUsername] = useState('');\r\n  const [repoPATToken, setRepoPATToken] = useState('');\r\n  const [loggedIn, setLoggedInState] = useState(localStorage.getItem('loggedIn') === 'true');\r\n\r\n  const handleSubmit = () => {\r\n    const user = checkCredentials(username, repoPATToken);\r\n\r\n    if (user) {\r\n      console.log('User signed in:', user);\r\n      setLoggedInState(true);\r\n      localStorage.setItem('loggedIn', 'true');\r\n    } else {\r\n      console.error('Username or token does not match');\r\n    }\r\n    setUsername('');\r\n    setRepoPATToken('');\r\n  };\r\n\r\n  return (\r\n    <div className='signin-container'>\r\n      <form>\r\n      <TextField\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Username\"\r\n        sx={{width:\"20vw\"}}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant=\"standard\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <TextField\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"PAT Token\"\r\n        sx={{width:\"20vw\"}}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <KeyIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant=\"standard\"\r\n        value={repoPATToken}\r\n        onChange={(e) => setRepoPATToken(e.target.value)}\r\n      />\r\n      <Button onClick={handleSubmit}>Submit</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAO,eAAe;AACtB,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,gBAAgB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,QAAQ,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAACiB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC;EAE1F,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,IAAI,GAAGd,gBAAgB,CAACK,QAAQ,EAAEE,YAAY,CAAC;IAErD,IAAIO,IAAI,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;MACpCJ,gBAAgB,CAAC,IAAI,CAAC;MACtBC,YAAY,CAACM,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;IAC1C,CAAC,MAAM;MACLF,OAAO,CAACG,KAAK,CAAC,kCAAkC,CAAC;IACnD;IACAZ,WAAW,CAAC,EAAE,CAAC;IACfE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BlB,OAAA;MAAAkB,QAAA,gBACAlB,OAAA,CAACN,SAAS;QACRyB,EAAE,EAAC,2BAA2B;QAC9BC,KAAK,EAAC,UAAU;QAChBC,EAAE,EAAE;UAACC,KAAK,EAAC;QAAM,CAAE;QACnBC,UAAU,EAAE;UACVC,cAAc,eACZxB,OAAA,CAACP,cAAc;YAACgC,QAAQ,EAAC,OAAO;YAAAP,QAAA,eAC9BlB,OAAA,CAACL,aAAa;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAEpB,CAAE;QACFC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAE5B,QAAS;QAChB6B,QAAQ,EAAGC,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACF7B,OAAA,CAACN,SAAS;QACRyB,EAAE,EAAC,2BAA2B;QAC9BC,KAAK,EAAC,WAAW;QACjBC,EAAE,EAAE;UAACC,KAAK,EAAC;QAAM,CAAE;QACnBC,UAAU,EAAE;UACVC,cAAc,eACZxB,OAAA,CAACP,cAAc;YAACgC,QAAQ,EAAC,OAAO;YAAAP,QAAA,eAC9BlB,OAAA,CAACJ,OAAO;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAEpB,CAAE;QACFC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAE1B,YAAa;QACpB2B,QAAQ,EAAGC,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACF7B,OAAA,CAACH,MAAM;QAACsC,OAAO,EAAExB,YAAa;QAAAO,QAAA,EAAC;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC3B,EAAA,CAxDuBD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}