{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport \"./fleet-screen.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport FileDropzone from \"../components/drag-n-drop/dropzone\";\nimport ShowImage from \"./showImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FleetScreen = props => {\n  _s();\n  const [images, setImages] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.map((file, index) => {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        setImages(prevState => [...prevState, {\n          id: index,\n          src: e.target.result\n        }]);\n      };\n      reader.readAsDataURL(file);\n      return file;\n    });\n  }, []);\n  const handleRemoveImage = id => {\n    setImages(prevState => prevState.filter(image => image.id !== id));\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    multiple: false // Only allow one file to be dropped at a time\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fleet-screen-container\",\n    children: [/*#__PURE__*/_jsxDEV(FileDropzone, {\n      getRootProps: getRootProps,\n      getInputProps: getInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowImage, {\n      images: images,\n      handleRemoveImage: handleRemoveImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(FleetScreen, \"cZGrWg75ss1fDZWHDp1esBRptTE=\", false, function () {\n  return [useDropzone];\n});\n_c = FleetScreen;\nexport default FleetScreen;\nvar _c;\n$RefreshReg$(_c, \"FleetScreen\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","FileDropzone","ShowImage","jsxDEV","_jsxDEV","FleetScreen","props","_s","images","setImages","onDrop","acceptedFiles","map","file","index","reader","FileReader","onload","e","prevState","id","src","target","result","readAsDataURL","handleRemoveImage","filter","image","getRootProps","getInputProps","multiple","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport \"./fleet-screen.scss\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport FileDropzone from \"../components/drag-n-drop/dropzone\";\r\nimport ShowImage from \"./showImage\";\r\n\r\nconst FleetScreen = (props) => {\r\n  const [images, setImages] = useState([]);\r\n  \r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.map((file, index) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        setImages((prevState) => [\r\n          ...prevState,\r\n          { id: index, src: e.target.result },\r\n        ]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      return file;\r\n    });\r\n  }, []);\r\n\r\n  const handleRemoveImage = (id) => {\r\n    setImages((prevState) => prevState.filter((image) => image.id !== id));\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    multiple: false, // Only allow one file to be dropped at a time\r\n  });\r\n\r\n  return (\r\n    <div className=\"fleet-screen-container\">\r\n      <FileDropzone getRootProps={getRootProps} getInputProps={getInputProps} />\r\n      <ShowImage images={images} handleRemoveImage={handleRemoveImage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FleetScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,MAAM,GAAGZ,WAAW,CAAEa,aAAa,IAAK;IAC5CA,aAAa,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAG,UAAUC,CAAC,EAAE;QAC3BT,SAAS,CAAEU,SAAS,IAAK,CACvB,GAAGA,SAAS,EACZ;UAAEC,EAAE,EAAEN,KAAK;UAAEO,GAAG,EAAEH,CAAC,CAACI,MAAM,CAACC;QAAO,CAAC,CACpC,CAAC;MACJ,CAAC;MACDR,MAAM,CAACS,aAAa,CAACX,IAAI,CAAC;MAC1B,OAAOA,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,iBAAiB,GAAIL,EAAE,IAAK;IAChCX,SAAS,CAAEU,SAAS,IAAKA,SAAS,CAACO,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EACxE,CAAC;EAED,MAAM;IAAEQ,YAAY;IAAEC;EAAc,CAAC,GAAG7B,WAAW,CAAC;IAClDU,MAAM;IACNoB,QAAQ,EAAE,KAAK,CAAE;EACnB,CAAC,CAAC;;EAEF,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC5B,OAAA,CAACH,YAAY;MAAC2B,YAAY,EAAEA,YAAa;MAACC,aAAa,EAAEA;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EhC,OAAA,CAACF,SAAS;MAACM,MAAM,EAAEA,MAAO;MAACiB,iBAAiB,EAAEA;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhCIF,WAAW;EAAA,QAqByBL,WAAW;AAAA;AAAAqC,EAAA,GArB/ChC,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}