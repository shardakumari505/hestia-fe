{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t-shakumari\\\\hestia\\\\src\\\\screens\\\\fleet-screen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cluster = _ref => {\n  let {\n    name,\n    onDrop\n  } = _ref;\n  const handleDragStart = event => {\n    event.dataTransfer.setData(\"text/plain\", name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cluster\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    onDrop: onDrop,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Cluster;\nconst FleetScreen = () => {\n  _s();\n  const [droppedItems, setDroppedItems] = useState([]);\n  const handleDrop = event => {\n    event.preventDefault();\n    const itemName = event.dataTransfer.getData(\"text/plain\");\n    setDroppedItems(prevItems => [...prevItems, itemName]);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drop-container\",\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Drag and Drop Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cluster-container\",\n      children: [1, 2, 3, 4, 5].map(item => /*#__PURE__*/_jsxDEV(Cluster, {\n        name: `Cluster Name ${item}`,\n        onDrop: handleDrop\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropped-items\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dropped Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: droppedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(FleetScreen, \"uevDkba0AATDmcDiQsCOl1bV6co=\");\n_c2 = FleetScreen;\nexport default FleetScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cluster\");\n$RefreshReg$(_c2, \"FleetScreen\");","map":{"version":3,"names":["React","useState","Draggable","jsxDEV","_jsxDEV","Cluster","_ref","name","onDrop","handleDragStart","event","dataTransfer","setData","className","draggable","onDragStart","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FleetScreen","_s","droppedItems","setDroppedItems","handleDrop","preventDefault","itemName","getData","prevItems","handleDragOver","onDragOver","map","item","index","_c2","$RefreshReg$"],"sources":["C:/Users/t-shakumari/hestia/src/screens/fleet-screen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst Cluster = ({ name, onDrop }) => {\r\n  const handleDragStart = (event) => {\r\n    event.dataTransfer.setData(\"text/plain\", name);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cluster\"\r\n      draggable=\"true\"\r\n      onDragStart={handleDragStart}\r\n      onDrop={onDrop}\r\n    >\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FleetScreen = () => {\r\n  const [droppedItems, setDroppedItems] = useState([]);\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const itemName = event.dataTransfer.getData(\"text/plain\");\r\n    setDroppedItems((prevItems) => [...prevItems, itemName]);\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"drop-container\" onDrop={handleDrop} onDragOver={handleDragOver}>\r\n      <h2>Drag and Drop Example</h2>\r\n      <div className=\"cluster-container\">\r\n        {[1, 2, 3, 4, 5].map((item) => (\r\n          <Cluster key={item} name={`Cluster Name ${item}`} onDrop={handleDrop} />\r\n        ))}\r\n      </div>\r\n      <div className=\"dropped-items\">\r\n        <h3>Dropped Items</h3>\r\n        <ul>\r\n          {droppedItems.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FleetScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}