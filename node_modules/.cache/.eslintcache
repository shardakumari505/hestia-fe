[{"C:\\Users\\t-shakumari\\hestia\\src\\index.js":"1","C:\\Users\\t-shakumari\\hestia\\src\\App.js":"2","C:\\Users\\t-shakumari\\hestia\\src\\reportWebVitals.js":"3","C:\\Users\\t-shakumari\\hestia\\src\\Logged-in-page\\loggedinpage.jsx":"4","C:\\Users\\t-shakumari\\hestia\\src\\navigation-panel\\navigation-panel.jsx":"5","C:\\Users\\t-shakumari\\hestia\\src\\screens\\clusters-screen.jsx":"6","C:\\Users\\t-shakumari\\hestia\\src\\components\\header.jsx":"7","C:\\Users\\t-shakumari\\hestia\\src\\screens\\fleet-screen.jsx":"8","C:\\Users\\t-shakumari\\hestia\\src\\screens\\showImage.jsx":"9","C:\\Users\\t-shakumari\\hestia\\src\\components\\drag-n-drop\\dropzone.jsx":"10","C:\\Users\\t-shakumari\\hestia\\src\\screens\\fleets.jsx":"11","C:\\Users\\t-shakumari\\hestia\\src\\components\\DataTable.jsx":"12","C:\\Users\\t-shakumari\\hestia\\src\\components\\EnhancedTableHead.jsx":"13","C:\\Users\\t-shakumari\\hestia\\src\\components\\DrawerHeader.jsx":"14","C:\\Users\\t-shakumari\\hestia\\src\\components\\EnhancedTableToolbar.jsx":"15","C:\\Users\\t-shakumari\\hestia\\src\\screens\\onboarding\\onboarding.jsx":"16","C:\\Users\\t-shakumari\\hestia\\src\\components\\signin\\signin.jsx":"17","C:\\Users\\t-shakumari\\hestia\\src\\Auth.js":"18"},{"size":535,"mtime":1684847600513,"results":"19","hashOfConfig":"20"},{"size":916,"mtime":1688721373739,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1684847600707,"results":"22","hashOfConfig":"20"},{"size":482,"mtime":1688407095188,"results":"23","hashOfConfig":"20"},{"size":2971,"mtime":1688613018513,"results":"24","hashOfConfig":"20"},{"size":193,"mtime":1685600269618,"results":"25","hashOfConfig":"20"},{"size":1850,"mtime":1688708034726,"results":"26","hashOfConfig":"20"},{"size":7884,"mtime":1688659869943,"results":"27","hashOfConfig":"20"},{"size":313,"mtime":1687938387758,"results":"28","hashOfConfig":"20"},{"size":1734,"mtime":1687761817382,"results":"29","hashOfConfig":"20"},{"size":2888,"mtime":1688291882915,"results":"30","hashOfConfig":"20"},{"size":11571,"mtime":1688292107308,"results":"31","hashOfConfig":"20"},{"size":3621,"mtime":1688277567963,"results":"32","hashOfConfig":"20"},{"size":445,"mtime":1688008125122,"results":"33","hashOfConfig":"20"},{"size":1980,"mtime":1688277790689,"results":"34","hashOfConfig":"20"},{"size":1698,"mtime":1688634449934,"results":"35","hashOfConfig":"20"},{"size":4581,"mtime":1688721421179,"results":"36","hashOfConfig":"20"},{"size":378,"mtime":1688451855733,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"u10uvm",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"41"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\t-shakumari\\hestia\\src\\index.js",[],[],[],"C:\\Users\\t-shakumari\\hestia\\src\\App.js",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\reportWebVitals.js",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\Logged-in-page\\loggedinpage.jsx",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\navigation-panel\\navigation-panel.jsx",["100","101"],[],"C:\\Users\\t-shakumari\\hestia\\src\\screens\\clusters-screen.jsx",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\components\\header.jsx",["102"],[],"C:\\Users\\t-shakumari\\hestia\\src\\screens\\fleet-screen.jsx",["103","104","105","106","107"],[],"import React, { useState, setState } from \"react\";\r\nimport './fleet-screen.scss';\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport { TextField, Button, Box, Paper } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst ClusterContainer = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    draggable: true,\r\n}));\r\n\r\nconst Cluster = ({ id, name, onDragStart }) => {\r\n    return (\r\n        <ClusterContainer className=\"cluster\" draggable onDragStart={(e) => onDragStart(e, id)}>\r\n            {name}\r\n        </ClusterContainer>\r\n    );\r\n};\r\n\r\nconst FleetScreen = () => {\r\n    const [fleetName, setFleetName] = useState(\"\")\r\n    const [department, setDepartment] = useState(\"\")\r\n    const [fleetNameError, setFleetNameError] = useState(false)\r\n    const [departmentError, setDepartmentError] = useState(false)\r\n    const [clusters, setClusters] = useState([\r\n        { id: 1, name: \"Cluster Name 031\" },\r\n        { id: 2, name: \"Cluster Name 032\" },\r\n        { id: 3, name: \"Cluster Name 033\" },\r\n        { id: 4, name: \"Cluster Name 034\" },\r\n        { id: 5, name: \"Cluster Name 035\" }\r\n    ]);\r\n\r\n    const [droppedItems, setDroppedItems] = useState([]);\r\n\r\n    const handleDragStart = (event, itemId) => {\r\n        console.log(\"drag start\");\r\n        event.dataTransfer.setData(\"text/plain\", itemId);\r\n    };\r\n\r\n    const handleDrop = (event) => {\r\n        event.preventDefault();\r\n        const itemId = event.dataTransfer.getData(\"text/plain\");\r\n        const droppedCluster = clusters.find((cluster) => cluster.id.toString() === itemId);\r\n\r\n        if (droppedCluster) {\r\n            setDroppedItems((prevItems) => [...prevItems, droppedCluster]);\r\n            setClusters((prevClusters) => prevClusters.filter((cluster) => cluster.id.toString() !== itemId));\r\n        }\r\n    };\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = \"move\";\r\n    };\r\n\r\n    const handleDragEnter = (event) => {\r\n        event.preventDefault();\r\n        event.target.classList.add(\"drag-over\");\r\n    };\r\n\r\n    const handleDragLeave = (event) => {\r\n        event.preventDefault();\r\n        event.target.classList.remove(\"drag-over\");\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"drop-container\"\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n        >\r\n            <Box component=\"main\" sx={{ flexGrow: 1, p: 1 }}>\r\n\r\n                <Stack direction=\"row\" style={{width:\"99%\",paddingLeft:\"10px\", display:\"flex\", justifyContent:\"space-between\"}}>\r\n                    <div style={{display:\"flex\"}} >\r\n                    <Typography variant=\"h6\" noWrap component=\"div\">\r\n                        Fleet Details - props.fleetName-0\r\n                    </Typography>\r\n                    <Button style={{marginLeft:\"20px\"}} variant=\"outlined\" color=\"primary\" type=\"submit\" align=\"center\" startIcon={<CancelIcon />}>Cancel</Button>\r\n                    </div>\r\n                    <div>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" align=\"center\" startIcon={<SaveIcon />} > Save</Button>\r\n                    </div>\r\n                </Stack>\r\n                <br />\r\n\r\n                <Grid container spacing={2}>\r\n                    <Paper elevation={2} sx={{ width: '70%', mb: 2 }}>\r\n                        <Box component=\"form\" sx={{ '& .MuiTextField-root': { m: 2, width: '45ch' }, width: '100%',display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\" }}>\r\n                            <div style={{ display: \"flex\",alignItems:\"flex-start\" }} className=\"\">\r\n                                <TextField\r\n                                    label=\"Fleet Name\"\r\n                                    onChange={e => setFleetName(e.target.value)}\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    type=\"fleetName\"\r\n                                    sx={{ mb: 3 }}\r\n                                    //fullWidth\r\n                                    value={fleetName}\r\n                                    error={fleetNameError}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Department \"\r\n                                    onChange={e => setDepartment(e.target.value)}\r\n                                    required\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    type=\"department\"\r\n                                    value={department}\r\n                                    error={departmentError}\r\n                                    //fullWidth\r\n                                    sx={{ mb: 3 }}\r\n                                />\r\n                            </div>\r\n                            <div style={{width:\"100%\", display: \"flex\", alignItems: \"flex-start\" }} className=\"\">\r\n                                <TextField\r\n                                    id=\"outlined-multiline-static\"\r\n                                    onChange={e => setDepartment(e.target.value)}\r\n                                    label=\"Notes\"\r\n                                    style={{marginLeft:\"25px\"}}\r\n                                    multiline\r\n                                />\r\n                            </div>\r\n\r\n                            <br />\r\n\r\n                            <Paper elevation={2} sx={{ minHeight:\"20vh\",width: '95%', mb: 3, display:\"flex\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n                                CLUSTERS\r\n                                <Grid style={{display:\"flex\", flexWrap:\"wrap\",gap:\"10px\",width:\"95%\", padding:\"5px\"}} item>\r\n                                    {droppedItems.map((item, index) => (\r\n                                        <ClusterContainer key={index}>{item.name}</ClusterContainer>\r\n                                    ))}\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Box>\r\n                    </Paper>\r\n                    <Paper elevation={2} sx={{ width: '30%', mb: 2 }}>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                            <br />\r\n                            <Grid style={{width:\"100%\",display:\"flex\",alignItems:\"center\"}} container >\r\n                                {clusters.map((cluster) => (\r\n                                    <Grid item xs={2} sm={4} md={4} style={{padding:\"5px\"}}>\r\n                                        <Cluster\r\n                                            key={cluster.id}\r\n                                            id={cluster.id.toString()}\r\n                                            name={cluster.name}\r\n                                            onDragStart={handleDragStart}\r\n                                        />\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FleetScreen;\r\n",[],"C:\\Users\\t-shakumari\\hestia\\src\\screens\\showImage.jsx",[],[],[],"C:\\Users\\t-shakumari\\hestia\\src\\components\\drag-n-drop\\dropzone.jsx",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\screens\\fleets.jsx",["108"],[],"import React, { useState, useEffect } from 'react';\r\nimport './fleets.scss'\r\nimport Box from '@mui/material/Box';\r\nimport DataTable from '../components/DataTable'\r\n\r\n\r\nfunction createData(name, clusters, nodes, cpus, memory) {\r\n    return {\r\n        name,\r\n        clusters,\r\n        nodes,\r\n        cpus,\r\n        memory,\r\n    };\r\n}\r\n\r\nconst rows = [\r\n    createData('Pampers-Munich-DEP0-Fleet-0', 5, 30, 100, 4000),\r\n    createData('Pampers-Munich-DEP0-Fleet-1', 6, 30, 90, 2000),\r\n    createData('Pampers-Munich-DEP1-Fleet-0', 6, 30, 90, 3000),\r\n    createData('Pampers-Munich-DEP1-Fleet-Prod-01', 6, 30, 90, 9000),\r\n    createData('Pampers-Munich-DEP1-Fleet-Prod-02', 6, 30, 90, 3200),\r\n    createData('OralB-Amsterdam-DEP1-Fleet-Prod-01', 6, 30, 90, 3300),\r\n    createData('OralB-Amsterdam-DEP1-Fleet-Prod-02', 6, 30, 90, 10000),\r\n    createData('Gillette-Mumbai-DEP07-Fleet-Prod-01', 6, 30, 90, 4000),\r\n    createData('Gillette-Mumbai-DEP07-Fleet-Prod-02', 6, 30, 90, 4000),\r\n    createData('Gillette-Mumbai-DEP07-Fleet-Prod-03', 6, 30, 90, 4000),\r\n    createData('Pantene-Bangalore-DEP05-Fleet-Prod-01', 6, 30, 90, 4000),\r\n    createData('Pantene-Delhi-DEP05-Fleet-Prod-01', 6, 30, 90, 4000),\r\n    createData('Ariel-Bangalore-DEP04-Fleet-Prod-01', 6, 30, 90, 4000),\r\n    createData('Colgate-Bangalore-DEP03-Fleet-Prod-01', 6, 30, 90, 4000),\r\n    createData('Colgate-Mumbai-DEP03-Fleet-Prod-02', 6, 30, 90, 4000),\r\n];\r\n\r\nconst headerCells = [\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'Fleet Name',\r\n    },\r\n    {\r\n        id: 'clusters',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Cluster(s)',\r\n    },\r\n    {\r\n        id: 'nodes',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Nodes',\r\n    },\r\n    {\r\n        id: 'cpus',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'CPU(s)',\r\n    },\r\n    {\r\n        id: 'memory',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Memory',\r\n    },\r\n];\r\n\r\nexport default function Fleets(props) {\r\n\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts?_limit=10')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPosts(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    }, []);\r\n    return (\r\n\r\n        <div className='fleets-container'>\r\n            <Box sx={{ display: 'flex' }}>\r\n                <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\r\n                    <DataTable title=\"Fleets\" dataSource={rows} headerCells={headerCells} target=\"/fleetscreen\"/>\r\n                </Box>\r\n                \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\t-shakumari\\hestia\\src\\components\\DataTable.jsx",["109","110","111","112","113","114","115","116","117","118","119","120","121","122"],[],"import React from 'react'\r\nimport DrawerHeader from './DrawerHeader'\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport EnhancedTableToolbar from './EnhancedTableToolbar'\r\nimport EnhancedTableHead from './EnhancedTableHead'\r\nimport ArticleIcon from '@mui/icons-material/Article';\r\nimport Link from '@mui/material/Link';\r\nimport Chip from '@mui/material/Chip';\r\n\r\nconst rows = [\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DataTable(props) {\r\n\r\n    const title = props.title\r\n\r\n    const rows = props.dataSource\r\n    const keys = Object.keys(rows[0])\r\n    const target = props.target\r\n    const navigate = useNavigate();\r\n\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('clusters');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelected = rows.map((n) => n.name);\r\n            setSelected(newSelected);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name, target) => {\r\n\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n\r\n\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    const visibleRows = React.useMemo(\r\n        () =>\r\n            stableSort(rows, getComparator(order, orderBy)).slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage,\r\n            ),\r\n        [order, orderBy, page, rowsPerPage],\r\n    );\r\n\r\n\r\n    return (\r\n\r\n        <Box sx={{ width: '100%' }}>\r\n            <Paper sx={{ width: '100%', mb: 2 }}>\r\n                <EnhancedTableToolbar numSelected={selected.length} title={title} />\r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                            headerCells={props.headerCells}\r\n\r\n                        />\r\n                        <TableBody>\r\n                            {visibleRows.map((row, index) => {\r\n                                const isItemSelected = isSelected(row.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        //onClick={(event) => handleClick(event, row.name, target)}\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row.name}\r\n                                        selected={isItemSelected}\r\n                                        sx={{ cursor: 'pointer' }}\r\n\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                onClick={(event) => handleClick(event, row.name, target)}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId,\r\n                                                }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        {\r\n                                            keys.map((key) => {\r\n\r\n                                                if (key === \"name\") {\r\n                                                    return (\r\n                                                        <TableCell\r\n                                                            component=\"th\"\r\n                                                            id={labelId}\r\n                                                            scope=\"row\"\r\n                                                            padding=\"none\"\r\n                                                        >\r\n                                                            <Link\r\n                                                            style={{textDecoration:\"none\"}}\r\n                                                                to=\"/fleet-details\"\r\n                                                                onClick={() => {\r\n\r\n                                                                    navigate(target, { state: { fleet: row } });\r\n                                                                }}\r\n                                                            >\r\n                                                                {row[key]}\r\n                                                            </Link>\r\n\r\n                                                        </TableCell>\r\n                                                    )\r\n                                                }\r\n                                                if (key === \"state\") {\r\n                                                    return (\r\n                                                        <TableCell align=\"right\">\r\n                                                            <Chip\r\n                                                                label={row[key]}\r\n                                                                color={row[key]===\"success\"?\"primary\":\"secondary\"}\r\n                                                                size=\"small\"\r\n                                                            />\r\n                                                        </TableCell>\r\n                                                    )\r\n                                                }\r\n                                                return (\r\n                                                    <TableCell align=\"right\">{row[key]}</TableCell>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        <TableCell align=\"right\">\r\n                                            <Link target=\"/fleet\">\r\n                                                <ArticleIcon />\r\n                                            </Link>\r\n\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <FormControlLabel\r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                label=\"Dense padding\"\r\n            />\r\n        </Box>\r\n    );\r\n}","C:\\Users\\t-shakumari\\hestia\\src\\components\\EnhancedTableHead.jsx",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],[],"import React from 'react'\r\nimport DrawerHeader from './DrawerHeader'\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport { alpha } from '@mui/material/styles';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\n\r\nexport default function EnhancedTableHead(props) {\r\n\r\n    //const headc = props.headCellProps.map((headCell) => ()    \r\n    const headCells=props.headerCells\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all fleets',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n","C:\\Users\\t-shakumari\\hestia\\src\\components\\DrawerHeader.jsx",["138","139","140","141"],[],"\r\nimport { styled, useTheme, Theme, CSSObject } from '@mui/material/styles';\r\nimport React from 'react';\r\n\r\nconst DrawerHeaderTheme = ({ theme }) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n});\r\n\r\nconst DrawerHeader = styled('div')(DrawerHeaderTheme);\r\n\r\nexport default DrawerHeader;\r\n","C:\\Users\\t-shakumari\\hestia\\src\\components\\EnhancedTableToolbar.jsx",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\screens\\onboarding\\onboarding.jsx",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\components\\signin\\signin.jsx",[],[],"C:\\Users\\t-shakumari\\hestia\\src\\Auth.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":15},{"ruleId":"142","severity":1,"message":"146","line":32,"column":10,"nodeType":"144","messageId":"145","endLine":32,"endColumn":14},{"ruleId":"142","severity":1,"message":"147","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":25},{"ruleId":"142","severity":1,"message":"148","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"142","severity":1,"message":"149","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":12},{"ruleId":"142","severity":1,"message":"150","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":17},{"ruleId":"142","severity":1,"message":"151","line":33,"column":28,"nodeType":"144","messageId":"145","endLine":33,"endColumn":45},{"ruleId":"142","severity":1,"message":"152","line":34,"column":29,"nodeType":"144","messageId":"145","endLine":34,"endColumn":47},{"ruleId":"142","severity":1,"message":"153","line":71,"column":12,"nodeType":"144","messageId":"145","endLine":71,"endColumn":17},{"ruleId":"142","severity":1,"message":"154","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"142","severity":1,"message":"155","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":17},{"ruleId":"142","severity":1,"message":"156","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":15},{"ruleId":"142","severity":1,"message":"157","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":17},{"ruleId":"142","severity":1,"message":"158","line":14,"column":8,"nodeType":"144","messageId":"145","endLine":14,"endColumn":22},{"ruleId":"142","severity":1,"message":"159","line":15,"column":8,"nodeType":"144","messageId":"145","endLine":15,"endColumn":15},{"ruleId":"142","severity":1,"message":"160","line":16,"column":8,"nodeType":"144","messageId":"145","endLine":16,"endColumn":18},{"ruleId":"142","severity":1,"message":"161","line":19,"column":8,"nodeType":"144","messageId":"145","endLine":19,"endColumn":18},{"ruleId":"142","severity":1,"message":"162","line":20,"column":8,"nodeType":"144","messageId":"145","endLine":20,"endColumn":15},{"ruleId":"142","severity":1,"message":"163","line":23,"column":8,"nodeType":"144","messageId":"145","endLine":23,"endColumn":18},{"ruleId":"142","severity":1,"message":"164","line":24,"column":8,"nodeType":"144","messageId":"145","endLine":24,"endColumn":22},{"ruleId":"142","severity":1,"message":"165","line":25,"column":10,"nodeType":"144","messageId":"145","endLine":25,"endColumn":24},{"ruleId":"142","severity":1,"message":"166","line":32,"column":7,"nodeType":"144","messageId":"145","endLine":32,"endColumn":11},{"ruleId":"167","severity":1,"message":"168","line":143,"column":9,"nodeType":"169","endLine":143,"endColumn":44,"suggestions":"170"},{"ruleId":"142","severity":1,"message":"154","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":20},{"ruleId":"142","severity":1,"message":"156","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":15},{"ruleId":"142","severity":1,"message":"171","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":13},{"ruleId":"142","severity":1,"message":"172","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":17},{"ruleId":"142","severity":1,"message":"173","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":22},{"ruleId":"142","severity":1,"message":"174","line":12,"column":8,"nodeType":"144","messageId":"145","endLine":12,"endColumn":23},{"ruleId":"142","severity":1,"message":"159","line":15,"column":8,"nodeType":"144","messageId":"145","endLine":15,"endColumn":15},{"ruleId":"142","severity":1,"message":"160","line":16,"column":8,"nodeType":"144","messageId":"145","endLine":16,"endColumn":18},{"ruleId":"142","severity":1,"message":"175","line":17,"column":8,"nodeType":"144","messageId":"145","endLine":17,"endColumn":13},{"ruleId":"142","severity":1,"message":"161","line":19,"column":8,"nodeType":"144","messageId":"145","endLine":19,"endColumn":18},{"ruleId":"142","severity":1,"message":"162","line":20,"column":8,"nodeType":"144","messageId":"145","endLine":20,"endColumn":15},{"ruleId":"142","severity":1,"message":"176","line":21,"column":8,"nodeType":"144","messageId":"145","endLine":21,"endColumn":24},{"ruleId":"142","severity":1,"message":"177","line":22,"column":8,"nodeType":"144","messageId":"145","endLine":22,"endColumn":14},{"ruleId":"142","severity":1,"message":"163","line":23,"column":8,"nodeType":"144","messageId":"145","endLine":23,"endColumn":18},{"ruleId":"142","severity":1,"message":"164","line":24,"column":8,"nodeType":"144","messageId":"145","endLine":24,"endColumn":22},{"ruleId":"142","severity":1,"message":"178","line":2,"column":18,"nodeType":"144","messageId":"145","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"179","line":2,"column":28,"nodeType":"144","messageId":"145","endLine":2,"endColumn":33},{"ruleId":"142","severity":1,"message":"180","line":2,"column":35,"nodeType":"144","messageId":"145","endLine":2,"endColumn":44},{"ruleId":"142","severity":1,"message":"181","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":13},"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'AccountCircleIcon' is defined but never used.","'setState' is defined but never used.","'Card' is defined but never used.","'Draggable' is defined but never used.","'setFleetNameError' is assigned a value but never used.","'setDepartmentError' is assigned a value but never used.","'posts' is assigned a value but never used.","'DrawerHeader' is defined but never used.","'PropTypes' is defined but never used.","'alpha' is defined but never used.","'TableHead' is defined but never used.","'TableSortLabel' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'visuallyHidden' is defined but never used.","'rows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has a missing dependency: 'rows'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'Table' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TablePagination' is defined but never used.","'Paper' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'useTheme' is defined but never used.","'Theme' is defined but never used.","'CSSObject' is defined but never used.","'React' is defined but never used.",{"desc":"183","fix":"184"},"Update the dependencies array to be: [order, orderBy, page, rows, rowsPerPage]",{"range":"185","text":"186"},[4795,4830],"[order, orderBy, page, rows, rowsPerPage]"]